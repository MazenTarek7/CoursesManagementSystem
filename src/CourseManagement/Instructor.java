/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CourseManagement;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Mazen Tarek
 */
public class Instructor extends javax.swing.JFrame{
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form Instructor
     */
    public Instructor() {
        initComponents();
        showStudentScore();
        updateStudentCombo();
        updateCourseCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ScoreTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Grade = new javax.swing.JTextField();
        Score = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        insertScoreButton = new javax.swing.JButton();
        deleteScoreButton = new javax.swing.JButton();
        updateScoreButton = new javax.swing.JButton();
        studentID = new javax.swing.JComboBox<>();
        courseID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(74, 31, 61));

        jPanel2.setBackground(new java.awt.Color(186, 79, 84));

        ScoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScoreTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScoreTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ScoreTable);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(186, 79, 84));
        jButton1.setText("Logout");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CourseManagement/InstructorFormIcon.png"))); // NOI18N
        jLabel2.setText("Instructor");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Student ID");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Course ID");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Score");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Grade");

        jButton2.setText("CLR");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        insertScoreButton.setText("Insert");
        insertScoreButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insertScoreButtonMouseEntered(evt);
            }
        });
        insertScoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertScoreButtonActionPerformed(evt);
            }
        });

        deleteScoreButton.setText("Delete");
        deleteScoreButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteScoreButtonMouseEntered(evt);
            }
        });
        deleteScoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteScoreButtonActionPerformed(evt);
            }
        });

        updateScoreButton.setText("Update");
        updateScoreButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateScoreButtonMouseEntered(evt);
            }
        });
        updateScoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateScoreButtonActionPerformed(evt);
            }
        });

        studentID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Student ID" }));

        courseID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Course ID" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jButton2))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Score)
                            .addComponent(Grade)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(insertScoreButton)
                                .addGap(18, 18, 18)
                                .addComponent(deleteScoreButton)
                                .addGap(0, 4, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(courseID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateScoreButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(studentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(courseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(insertScoreButton)
                    .addComponent(deleteScoreButton)
                    .addComponent(updateScoreButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(this , "Successfully signed out");
        Login login = new Login();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
       jButton2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        studentID.setSelectedIndex(0);
        courseID.setSelectedIndex(0);
        Score.setText("");
        Grade.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void insertScoreButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertScoreButtonMouseEntered
        insertScoreButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_insertScoreButtonMouseEntered

    private void deleteScoreButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteScoreButtonMouseEntered
        deleteScoreButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deleteScoreButtonMouseEntered

    private void updateScoreButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateScoreButtonMouseEntered
        updateScoreButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updateScoreButtonMouseEntered

    private void ScoreTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScoreTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)ScoreTable.getModel();
        int selectedRow = ScoreTable.getSelectedRow();
        
        studentID.setSelectedItem(model.getValueAt(selectedRow, 0).toString());
        courseID.setSelectedItem(model.getValueAt(selectedRow, 1).toString());
        Score.setText(model.getValueAt(selectedRow, 3).toString());
        Grade.setText(model.getValueAt(selectedRow, 2).toString());
    }//GEN-LAST:event_ScoreTableMouseClicked

    private void insertScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertScoreButtonActionPerformed
         if (Score.getText().isBlank() == true || Grade.getText().isBlank() == true){
            JOptionPane.showMessageDialog(null, "Some data fields are empty"
                    , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        else{
        try {
            String sql = "INSERT INTO student_grade"
                    +"(Student_ID, Course_ID, Grade, Score)"
                    +"VALUES (?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost/coursesmanagement","root","");
            pst = con.prepareStatement(sql);
            pst.setString(1, String.valueOf(studentID.getSelectedItem()));
            pst.setString(2, String.valueOf(courseID.getSelectedItem()));
            pst.setString(3, Grade.getText());
            pst.setString(4, Score.getText());
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null , "Data inserted successfully");
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error in inserting data , Student ID doesn't exit or Record already exists" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        showStudentScore();
        }
    }//GEN-LAST:event_insertScoreButtonActionPerformed

    private void deleteScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteScoreButtonActionPerformed
        if (studentID.getSelectedIndex() == 0 || courseID.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "You must choose student id and course id to delete data" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        else{
        try {
            String sql = "DELETE FROM student_grade WHERE Student_ID = ? AND Course_ID = ?";
            con = DriverManager.getConnection("jdbc:mysql://localhost/coursesmanagement","root","");
            pst = con.prepareStatement(sql);
            pst.setString(1, String.valueOf(studentID.getSelectedItem()));
            pst.setString(2, String.valueOf(courseID.getSelectedItem()));
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null , "Data deleted successfully");
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error in deleting data" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        showStudentScore();
        }
    }//GEN-LAST:event_deleteScoreButtonActionPerformed

    private void updateScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateScoreButtonActionPerformed

        try {
            String sql = "UPDATE student_grade SET Grade = ? ,Score = ? WHERE Student_ID = ? AND Course_ID = ?";
            con = DriverManager.getConnection("jdbc:mysql://localhost/coursesmanagement","root","");
            pst = con.prepareStatement(sql);
            pst.setString(4 , String.valueOf(courseID.getSelectedItem()));
            pst.setString(1, Grade.getText());
            pst.setString(2, Score.getText());
            pst.setString(3,String.valueOf(studentID.getSelectedItem()));
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null , "Data updated successfully");
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error in updating data" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        showStudentScore(); 
        
    }//GEN-LAST:event_updateScoreButtonActionPerformed

    public void showStudentScore(){
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/coursesmanagement","root","");
            String sql = "SELECT * FROM student_grade";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            ScoreTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Error in displaying data" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void updateStudentCombo(){
        String sql = "SELECT * FROM managestudents";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()){
                studentID.addItem(rs.getString("Student_ID"));
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Couldn't load students date into combobox" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void updateCourseCombo(){
        String sql = "SELECT * FROM managecourses";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()){
                courseID.addItem(rs.getString("Course_ID"));
            }
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Couldn't load courses date into combobox" , "ERROR" , JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Instructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Instructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Instructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Instructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Instructor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Grade;
    private javax.swing.JTextField Score;
    private javax.swing.JTable ScoreTable;
    private javax.swing.JComboBox<String> courseID;
    private javax.swing.JButton deleteScoreButton;
    private javax.swing.JButton insertScoreButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> studentID;
    private javax.swing.JButton updateScoreButton;
    // End of variables declaration//GEN-END:variables
}
